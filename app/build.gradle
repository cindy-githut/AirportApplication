apply plugin: 'com.android.application'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'io.fabric'


//1 cmd rignt click, run as administrator
//2 programFiles> Java> jre > bin e.g C:\Program Files\Java\jre1.8.0_151\bin
//3 keytool
//4 keytool -genkey -v -keystore file.keystore -alias YOUR_ALIAS_NAME -storepass YOUR_ALIAS_PWD -keypass YOUR_ALIAS_PWD -keyalg RSA -validity 36500
//5
buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.28.1'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


def getVersionPropertiesValue(def varName) {
    def propertiesFile = file('version.properties')

    if (!propertiesFile.canRead()) {
        throw new FileNotFoundException("Could not read " + propertiesFile.name)
    }

    Properties properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))

    def propertyValue = properties[varName]
    if (varName == 'VERSION_CODE' || varName == 'VERSION_PATCH') {

        // only If we are building release increment the version code
        List gradleTasksNames = gradle.startParameter.getTaskNames()
        for (String taskName : gradleTasksNames) {
            if (taskName.contains("Release")) {
                propertyValue = propertyValue.toInteger() + 1
                properties[varName] = propertyValue.toString()
                properties.store(propertiesFile.newWriter(), null)
                break
            }
        }
    }

    return propertyValue
}

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.cindymb.airportapplication"
        minSdkVersion 21
        targetSdkVersion 28
        vectorDrawables.useSupportLibrary = true
        versionCode Integer.valueOf(getVersionPropertiesValue('VERSION_CODE'))
        versionName Integer.valueOf(getVersionPropertiesValue('VERSION_MAJOR')) + '.' + Integer.valueOf(getVersionPropertiesValue('VERSION_MINOR')) + '.' + Integer.valueOf(getVersionPropertiesValue('VERSION_PATCH'))
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        manifestPlaceholders = [fabricApiKey    : "34491b12f09ab2dbcaed517b724f3d73a9ecf793",
                                googleMapsApiKey: "AIzaSyBw3Z9RSmT0M-RZVFuVTasfiCJHzR2Emfg"]

    }

    signingConfigs {
        release {
            storeFile file("release.keystore")
            storePassword 'YOUR_ALIAS_PWD'
            keyAlias 'YOUR_ALIAS_NAME'
            keyPassword 'YOUR_ALIAS_PWD'
        }
    }
    flavorDimensions("default")
    productFlavors {

        development {
            buildConfigField('String', 'BASE_URL', '"https://5ca32815190b430014edbbf9.mockapi.io/"')
            buildConfigField('String', 'NEAR_BY_AIRPORT_URL', '"getall"')
            buildConfigField('String', 'AIRPORT_TIME_TABLE_URL', '"timetable"')
            buildConfigField('String', 'CITIES_URL', '"cities"')
        }
        production {
            buildConfigField('String', 'BASE_URL', '"http://aviation-edge.com/v2/public/"')
            buildConfigField('String', 'NEAR_BY_AIRPORT_URL', '"nearby?key=9e90c8-ae1786"')
            buildConfigField('String', 'AIRPORT_TIME_TABLE_URL', '"timetable?key=9e90c8-ae1786"')
            buildConfigField('String', 'CITIES_URL', '"cityDatabase?key=9e90c8-ae1786"')
        }
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
        }
    }
    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    def navigation_version = "1.0.0"
    def crashlytics_version = "2.9.6"
    def stetho_version = "1.5.0"
    def timber_version = "4.7.1"
    def easy_version = "1.1.3"
    def google_maps_version = "16.1.0"
    def fused_location_version = "16.0.0"
    def gson_version = '2.8.5'
    def retrofit_version = "2.4.0"
    def lifecycle_version = "1.1.1"
    def dagger2_version = "2.19"
    def okhttp3_version = "3.9.1"
    def eventbus_version = "3.1.1"


    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //Eventbus
    implementation "org.greenrobot:eventbus:$eventbus_version"

    //navigation components
    implementation "android.arch.navigation:navigation-fragment:$navigation_version"
    implementation "android.arch.navigation:navigation-ui:$navigation_version"

    // Crashlytics
    implementation("com.crashlytics.sdk.android:crashlytics:$crashlytics_version@aar") {
        transitive = true
    }

    //Stetho debug bridge
    implementation "com.facebook.stetho:stetho:$stetho_version"
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Easy Permissions
    implementation "pub.devrel:easypermissions:$easy_version"

    //Google Maps
    implementation "com.google.android.gms:play-services-maps:$google_maps_version"

    //fused location
    implementation "com.google.android.gms:play-services-location:$fused_location_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Ok http 3
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp3_version"

    // Android Architecture Component - LiveData & ViewModel
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"

    // Dagger libraries
    implementation "com.google.dagger:dagger:$dagger2_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger2_version"
}
